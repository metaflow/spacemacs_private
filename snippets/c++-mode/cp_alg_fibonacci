#key: fibn
#name: O(log(n)) Fibonacci calculation
# --
vl __fibonacci_m_pow(vl &a, l n, l mod) {
  if (n == 1) return a;
  vl r(4), m1, m2;
  if (n % 2 == 0) {
    m1 = m2 = __fibonacci_m_pow(a, n / 2, mod);
  } else {
    m1 = a;
    m2 = __fibonacci_m_pow(a, n - 1, mod);
  }
  r[0] = (m1[0] * m2[0] + m1[1] * m2[2]) % mod;
  r[1] = (m1[0] * m2[1] + m1[1] * m2[3]) % mod;
  r[2] = (m1[2] * m2[0] + m1[3] * m2[2]) % mod;
  r[3] = (m1[2] * m2[1] + m1[3] * m2[3]) % mod;
  return r;
}

// n >= 1, {1, 1, 2, 3, 5, ...}
l fibonacci(l n, l mod) {
  vl a(4);
  a[0] = 1; a[1] = 1; a[2] = 1; a[3] = 0;
  auto r = __fibonacci_m_pow(a, n, mod);
  return r[1];
}
