#key: graphp
#name: directed graph with pointers
# --
struct node;
struct edge;
using pnode = shared_ptr<node>;
using pedge = shared_ptr<edge>;
using graph = vector<pnode>;

struct node {
  l id, value;
  bool visited;
  vector<pedge> adjusted;
  // vector<pnode> adjusted;
  // l subtreeSize = 1; bool blocked;
  // l level;
  // vector<pnode> up;
  pnode parent;
};

struct edge {
  pnode from, to;
  l value;
};

void connect(pnode &a, pnode &b, l value) {
  pedge ea = make_shared<edge>();
  ea->from = a; ea->to = b; ea->value = value;
  a->adjusted.emplace_back(ea);
}
