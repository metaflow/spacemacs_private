#key: kmp
#name: KMP substring search in O(n) (Knuth Morris Pratt)
# --
vl kmp_build_back(const string& p) {
  vl b(p.size());
  l j = -1;
  for (size_t i = 0; i < p.size(); i++) {
    b[i] = j;
    while ((j > -1) and (p[j] != p[i])) j = b[j];
    j++;
  }
  return b;
}

vl kmp_search(const string& s, const string& p, const vl& b) {
  vl matches;
  l j = 0;
  for (size_t i = 0; i < s.size(); i++) {
    while (j > -1 && p[j] != s[i]) j = b[j];
    j++;
    if (j == l(p.size())) {
      matches.emplace_back(i - j + 1);
      j = b[j];
    }
  }
  return matches;
}
